<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute"
	backgroundGradientColors="[0x000000, 0x333333]" pageTitle="SideCar" addedToStage="init();"
	xmlns:components="components.*" xmlns:tools="tools.*" color="#BBBBBB" width="100%" height="100%">

	<mx:Style source="styles.css"/>
	
	<mx:Binding source="sel.value" destination="shelf.selectedIndex"/>
	<mx:Binding destination="sel.value" source="shelf.selectedIndex"/>
	
	<mx:Script>
		<![CDATA[
			import mx.events.MenuEvent;
			import mx.controls.Menu;
			import states.Page;
			import tools.SideCarBackend;
			import tools.Images;

			[Bindable]
			private var halfWindowHeight:int = 200;

			[Bindable]
			private var sc:SideCarBackend;
			
			public function init():void {
				trace("SideCar GUI Starting...");
				sc = new SideCarBackend(this);
				interactionHistory.setSideCar(sc);
				systemInternals.setSideCar(sc);
				halfWindowHeight = height/2;

				stage.addEventListener(Event.RESIZE, resizeHandler);
			}

			private function resizeHandler(e:Event):void {
				trace("Stage Resized");
				shelf.refresh();
			}
			
			private function displayShelfStopped():void {
				// trace("DisplayShelf stopped moving...");
			}


            [Bindable]
            public var utilFunctions: Array = 
            	[ 
            	  {label:"Exit"},
            	  {label:"Load Replay Log"}
            	];
        
            [Bindable]
            public var selectedItem:Object;        
            
            private var popupMenu:Menu;
            private function initPopupButtonMenu():void {
            	popupMenu = new Menu();
            	popupMenu.dataProvider = utilFunctions;
            	popupMenu.selectedIndex = 0;
            	popupMenu.addEventListener(MenuEvent.ITEM_CLICK, popupMenuClicked);
            	popupButton.popUp = popupMenu;
            }
            
            private function popupMenuClicked(e:MenuEvent):void {
            	var label:String = e.item.label;
            	trace(e.index);
            	
            	popupButton.label = label;
            	popupButton.close();
            	popupMenu.selectedIndex = e.index;
            	
            	switch(label) {
            		case "Exit":
            			// disconnect from the SideCar server....
            			sc.sendMessageWithArgsToSideCarServer("exitClients", "FlexGUI");
    	        		break;
            		default:
            			trace("Unimplemented handler for PopupMenuItem: " + label);
	            		break;
            	}
            	
            }
            			
		]]>
	</mx:Script>


	<mx:Fade id="fOutDetails" alphaTo="0" target="{systemInternals}" effectEnd="sc.endFadeOutDetails()"/>
	<mx:Fade id="fInDetails" alphaTo="0.75" target="{systemInternals}" effectStart="sc.startFadeInDetails()"/>

	<mx:Label text="SideCar Monitor" fontSize="33" fontFamily="Myriad Pro" left="5" top="5"/>
	
	<mx:PopUpButton top="5" left="270" styleName="button"
		label="Actions" creationComplete="initPopupButtonMenu()"
		width="130" id="popupButton" >
	</mx:PopUpButton>
	

	<mx:HBox width="50%" left="0" top="5">
		<mx:Spacer width="52%" />
		<mx:Button label="|&lt;" styleName="button" click="sc.rewind();"/>
		<mx:Button id="playStopButton" label="Play" styleName="button" click="sc.playOrStop();"/>
		<mx:Button label="&gt;|" styleName="button" click="sc.fastForward();"/>
	</mx:HBox>

	<!-- This control is kinda wonky, and sometimes introduces a cyan bar on the top of the SWF. Consider using something else. //-->
	<mx:ApplicationControlBar right="10" top="10" dock="false">
		<mx:Label text="Search:" fontSize="13"/>
		<mx:Canvas width="100%" maxWidth="200">
			<mx:Button label="Ã—" right="-8" verticalCenter="0" fontSize="14" click="sc.searchBoxClearClicked()" focusEnabled="false">
				<mx:upSkin>
					@Embed('images/spacer.gif')
				</mx:upSkin>
				<mx:overSkin>
					@Embed('images/spacer.gif')
				</mx:overSkin>
				<mx:downSkin>
					@Embed('images/spacer.gif')
				</mx:downSkin>
			</mx:Button>
			<mx:TextInput id="searchBox" text="{sc.DEFAULT_SEARCH_TEXT}" verticalCenter="-1" right="0" click="sc.searchBoxClicked();" 
				enter="sc.searchBoxSubmitted()" color="0xAAAAAA" focusOut="sc.searchBoxFocusOut()" focusIn="sc.searchBoxClicked()"/>
		</mx:Canvas>
	</mx:ApplicationControlBar>

	<!-- The Timeline //-->
	<mx:HBox width="50%" right="0" top="5">
		<mx:Spacer width="26%"/>
		<mx:Label text="Time:" fontSize="15"/>
		<mx:HSlider liveDragging="true" id="sel" minimum="0" value="0" 
			maximum="{shelf.numItems-1}" snapInterval="1" width="30%" 
			showDataTip="false" focusEnabled="false"/>
		<mx:Button label="+" click="sc.addPageState()" styleName="button"/>
		<mx:Spacer width="45%"/>		
	</mx:HBox>



	<components:DisplayShelf id="shelf" borderThickness="1" focusEnabled="false" top="8" horizontalCenter="0" 
		borderColor="#AAAAAA" width="100%" height="{halfWindowHeight}" 
		numItems="1" gap="{halfWindowHeight/2.3}" effectEnd="displayShelfStopped()"/>


	<mx:Canvas backgroundColor="0x565656" borderStyle="solid" borderColor="0x444444" backgroundAlpha="0.45" width="20%" right="0" top="150">
		<mx:HBox verticalAlign="middle" paddingLeft="5">
			<mx:Text width="55">
				<mx:text>
					Status
					Message
				</mx:text>
			</mx:Text>
			<mx:VRule height="60" strokeWidth="1" strokeColor="0x585858"/>
			<mx:Text color="0xDDDDDD" text="Waiting for Input..." id="statusBar" width="200" height="75" fontFamily="Consolas" fontSize="13" 
				paddingLeft="5" paddingRight="5" paddingTop="3" paddingBottom="3" textAlign="left"/>
		</mx:HBox>
	</mx:Canvas>

	<mx:Canvas top="50" left="-1" height="46%">
		<components:SystemInternals id="systemInternals" width="100%" height="100%"/>
		<mx:Button id="detailsButton" label="Hide" click="sc.toggleDetailsVisibility()" left="8" top="2" styleName="smallButton" height="18"/>
	</mx:Canvas>

	<components:InteractionHistory id="interactionHistory" height="48%" bottom="0" left="0" right="0"/>
</mx:Application>
