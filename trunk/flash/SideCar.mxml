<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute"
	backgroundGradientColors="[0x000000, 0x333333]" pageTitle="SideCar" addedToStage="init();"
	xmlns:components="components.*" xmlns:tools="tools.*" color="#BBBBBB" width="100%" height="100%">

	<mx:Style source="styles.css"/>
	
	<mx:Binding source="sel.value" destination="shelf.selectedIndex"/>
	<mx:Binding destination="sel.value" source="shelf.selectedIndex"/>
	
	<mx:Script>
		<![CDATA[
			import tools.SideCarBackend;
			import mx.controls.Alert;
			import mx.events.MenuEvent;
			import tools.Images;
			import components.State;
			
			private var playTimer:Timer = new Timer(500);

			[Bindable]
			private var halfWindowHeight:int = 200;

			private const defaultSearchText:String = "type here";
			private var isPlaying:Boolean = false;
			private var sidecarviz:SideCarBackend;
			
			public function init():void {
				sidecarviz = new SideCarBackend(this);
				
				shelfContainer.visible = true;
				halfWindowHeight = height/2;
				shelf.itemRenderer = new ClassFactory(State);
				playTimer.addEventListener(TimerEvent.TIMER, playTimerHandler);
			}
			
			private function addState():void {
				shelf.numItems = shelf.numItems+1;
				shelf.selectedIndex = shelf.numItems-1;
			}
			
			
			private function rewind():void {
				shelf.selectedIndex = 0;
			}
			

			private function playTimerHandler(e:TimerEvent):void {
				shelf.selectedIndex = Math.min(shelf.selectedIndex + 1, shelf.numItems-1);
				if (shelf.selectedIndex == shelf.numItems-1) {
					playTimer.stop();
				}
			}
			
			private function playOrStop():void {
				if (isPlaying) {
					playTimer.stop();
					playTimer.reset();
					playStopButton.label = "Play";
				} else {
					playTimer.reset();
					playTimer.start();
					playStopButton.label = "Stop";
				}
				isPlaying = !isPlaying;
			}
			
			private function fastForward():void {
				shelf.selectedIndex = shelf.numItems-1;
			}
			
			public function itemClickHandler(event:MenuEvent):void {
				Alert.show("Menu Label: " + event.label + " Item #" + event.index);
			}

			public function toggleDetailsVisibility():void {
				if (systemDetails.alpha > 0) {
					fOutDetails.play();
				} else {
					fInDetails.play();
				}
			}
			
			public function toggleInteractionHistoryVisibility():void {
				if (interactionHistory.alpha > 0) {
					fOutHistory.play();
				} else {
					fInHistory.play();
				}
			}

			public function endFadeOutDetails():void {
				systemDetails.visible = false;
				detailsButton.label = "Show System Details";
			}
			public function startFadeInDetails():void {
				systemDetails.visible = true;
				detailsButton.label = "Hide";
			}

			
			public function endFadeOut():void {
				interactionHistory.visible = false;
				historyButton.label = "Show Interaction History";
			}
			public function startFadeIn():void {
				interactionHistory.visible = true;
				historyButton.label = "Hide";
			}
			
			public function searchBoxFocusOut():void {
				if (searchBox.text == "") {
					searchBox.text = defaultSearchText;
					searchBox.setStyle("color", "0xAAAAAA");
				}
			}
			
			public function searchBoxClicked():void {
				if (searchBox.text == defaultSearchText) {
					searchBox.text = "";
					searchBox.setStyle("color", "0x222222");
				}
			}
			public function searchBoxClearClicked():void {
				searchBox.text = defaultSearchText;
				searchBox.setStyle("color", "0xAAAAAA");
			}
			public function searchBoxSubmitted():void {
				if (searchBox.text != defaultSearchText) {
					trace("Searching for: " + searchBox.text);
				}
			}
		]]>
	</mx:Script>

	<mx:XMLList id="menuItems">
		<node label="Connect"/>		
		<node label="Exit"/>		
	</mx:XMLList>

	<mx:Fade id="fOutDetails" alphaTo="0" target="{systemDetails}" effectEnd="endFadeOutDetails()"/>
	<mx:Fade id="fInDetails" alphaTo="0.75" target="{systemDetails}" effectStart="startFadeInDetails()"/>

	<mx:Fade id="fOutHistory" alphaTo="0" target="{interactionHistory}" effectEnd="endFadeOut()"/>
	<mx:Fade id="fInHistory" alphaTo="0.7" target="{interactionHistory}" effectStart="startFadeIn()"/>

	<mx:Label text="SideCar Visualizations" fontSize="30" fontFamily="Myriad Pro" left="10" top="10"/>

	<mx:VBox top="10" id="shelfContainer" horizontalCenter="0" width="100%" visible="false" focusEnabled="false">
		<components:DisplayShelf id="shelf" borderThickness="1" focusEnabled="false"
			borderColor="#AAAAAA" enableHistory="false" width="100%" height="{halfWindowHeight}" numItems="1" gap="{halfWindowHeight/2.3}"/>
		<mx:HBox left="10" right="10" width="100%">
			<mx:Spacer width="5"/>
			<mx:Button label="Rewind" styleName="button" click="rewind();"/>
			<mx:Button id="playStopButton" label="Play" styleName="button" click="playOrStop();"/>
			<mx:Button label="Fast Forward" styleName="button" click="fastForward();"/>
			<mx:Label text="Timeline:" fontSize="15"/>
			<mx:HSlider liveDragging="true" id="sel" minimum="0" value="0" maximum="{shelf.numItems-1}" snapInterval="1" width="100%" 
				showDataTip="false" focusEnabled="false"/>
			<mx:Button label="Add State" styleName="button" click="addState()"/>
			<mx:Spacer width="5"/>
		</mx:HBox>
	</mx:VBox>

	
	<!-- This control is kinda wonky, and sometimes introduces a cyan bar on the top of the SWF. Consider using something else. //-->
	<mx:ApplicationControlBar right="10" top="10" dock="false">
		<mx:Label text="Search:"/>
		<mx:Canvas width="100%" maxWidth="200">
			<mx:Button label="Ã—" right="-8" verticalCenter="0" fontSize="14" click="searchBoxClearClicked()" focusEnabled="false">
				<mx:upSkin>
					@Embed('images/spacer.gif')
				</mx:upSkin>
				<mx:overSkin>
					@Embed('images/spacer.gif')
				</mx:overSkin>
				<mx:downSkin>
					@Embed('images/spacer.gif')
				</mx:downSkin>
			</mx:Button>
			<mx:TextInput id="searchBox" text="{defaultSearchText}" verticalCenter="-1" right="0" click="searchBoxClicked();" 
				enter="searchBoxSubmitted()" color="0xAAAAAA" focusOut="searchBoxFocusOut()" focusIn="searchBoxClicked()"/>
		</mx:Canvas>
		<mx:PopUpMenuButton id="menuButton" labelField="@label" itemClick="itemClickHandler(event);" dataProvider="{menuItems}" styleName="button"/>
	</mx:ApplicationControlBar>

	<mx:Canvas top="50" right="0" height="44%">
		<components:InteractionHistory id="interactionHistory" width="100%" height="100%"/>
		<mx:Button id="historyButton" label="Hide" click="toggleInteractionHistoryVisibility()" right="8" top="2" styleName="smallButton" height="18"/>
	</mx:Canvas>

	<mx:Canvas top="50" left="-1" height="44%">
		<components:SystemInternals id="systemDetails" width="100%" height="100%"/>
		<mx:Button id="detailsButton" label="Hide" click="toggleDetailsVisibility()" left="8" top="2" styleName="smallButton" height="18"/>
	</mx:Canvas>

	<!-- The Println Data Goes Here... //-->
	<mx:AdvancedDataGrid id="printlnGrid" color="#000000" height="42%" bottom="5" left="10" right="10" focusEnabled="false" fontSize="12">
		<mx:columns>
			<mx:AdvancedDataGridColumn headerText="Time" dataField="Time" width="200"/>
			<mx:AdvancedDataGridColumn headerText="Component/Device" dataField="Class" width="160"/>
			<mx:AdvancedDataGridColumn headerText="Handler / Action" dataField="Handler" width="160"/>
			<mx:AdvancedDataGridColumn headerText="Information" dataField="PrintlnContents"/>
		</mx:columns>
	</mx:AdvancedDataGrid>
	<mx:Button click="sidecarviz.addData();" right="15" bottom="15" label="Add Data"/>
</mx:Application>
